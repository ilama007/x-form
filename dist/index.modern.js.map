{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormGroup,\n  InputGroup,\n  TextArea,\n  RadioGroup,\n  Radio,\n  Checkbox,\n  HTMLSelect,\n  Button\n} from '@blueprintjs/core';\nimport './blueprint-light.css';\n\nconst styles = {\n  errorMsg: {\n    color: 'red',\n    fontSize: 12\n  }\n};\n\nexport default function XForm({\n  name,\n  okButtonTitle,\n  showResetButton,\n  schema,\n  initialValues,\n  validationHandler,\n  successHandler,\n  disableButtons\n}) {\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [submitComplete, setSubmitComplete] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSubmitComplete(false);\n    validationHandler && setErrors(validationHandler(values));\n    setSubmitComplete(true);\n  };\n\n  const resetHandler = () => {\n    setValues({ ...initialValues });\n  };\n\n  useEffect(() => {\n    if (submitComplete) {\n      if (Object.keys(errors).length === 0 && errors.constructor === Object) {\n        successHandler(values);\n      }\n    }\n  }, [errors, submitComplete]);\n\n  const handleChange = (event) => {\n    event.persist();\n    const elementType = event.target.type;\n    if (elementType === 'checkbox') {\n      setValues((values) => ({\n        ...values,\n        [event.target.name]: event.target.checked\n      }));\n    } else {\n      setValues((values) => ({\n        ...values,\n        [event.target.name]: event.target.value\n      }));\n    }\n  };\n\n  return (\n    <form id={name} noValidate>\n      {schema.map((obj) => {\n        if (\n          obj.type === 'email' ||\n          obj.type === 'text' ||\n          obj.type === 'password' ||\n          obj.type === 'tel'\n        ) {\n          return (\n            <FormGroup\n              key={obj.name}\n              label={<span dangerouslySetInnerHTML={{ __html: obj.label }} />}\n              labelFor={`${name}__${obj.name}`}\n              labelInfo={obj.labelInfo || ''}\n              helperText={obj.helperText || ''}\n            >\n              <InputGroup\n                large\n                id={`${name}__${obj.name}`}\n                name={obj.name}\n                placeholder={obj.placeHolder || ''}\n                maxLength={obj.maxLength && obj.maxLength}\n                minLength={obj.minLength && obj.minLength}\n                type={obj.type}\n                onChange={handleChange}\n                value={values[obj.name]}\n              />\n              {errors[obj.name] && (\n                <span style={styles.errorMsg} className='error-info'>\n                  {errors[obj.name]}\n                </span>\n              )}\n            </FormGroup>\n          );\n        }\n\n        if (obj.type === 'textarea') {\n          return (\n            <FormGroup\n              key={obj.name}\n              label={<span dangerouslySetInnerHTML={{ __html: obj.label }} />}\n              labelFor={`${name}__${obj.name}`}\n              labelInfo={obj.labelInfo || ''}\n              helperText={obj.helperText || ''}\n            >\n              <TextArea\n                id={`${name}__${obj.name}`}\n                name={obj.name}\n                text={values[obj.name]}\n                placeholder={obj.placeHolder || ''}\n                rows={obj.rows && obj.rows}\n                cols={obj.cols && obj.cols}\n                growVertically\n                large\n                onChange={handleChange}\n              />\n              {errors[obj.name] && (\n                <span style={styles.errorMsg} className='error-info'>\n                  {errors[obj.name]}\n                </span>\n              )}\n            </FormGroup>\n          );\n        }\n\n        if (obj.type === 'radiogroup') {\n          return (\n            <FormGroup\n              key={obj.name}\n              label={<span dangerouslySetInnerHTML={{ __html: obj.label }} />}\n              labelInfo={obj.labelInfo || ''}\n              helperText={obj.helperText || ''}\n            >\n              <RadioGroup\n                onChange={handleChange}\n                name={obj.name}\n                selectedValue={values[obj.name]}\n              >\n                {obj.options.map((option, index) => {\n                  return (\n                    <Radio\n                      large\n                      key={index}\n                      className={`${name}__radio-${obj.name}`}\n                      value={option.value}\n                    >\n                      <span\n                        dangerouslySetInnerHTML={{ __html: option.label }}\n                      />\n                    </Radio>\n                  );\n                })}\n              </RadioGroup>\n              {errors[obj.name] && (\n                <span style={styles.errorMsg} className='error-info'>\n                  {errors[obj.name]}\n                </span>\n              )}\n            </FormGroup>\n          );\n        }\n\n        if (obj.type === 'checkboxgroup') {\n          return (\n            <FormGroup\n              key={obj.name}\n              label={<span dangerouslySetInnerHTML={{ __html: obj.label }} />}\n              labelInfo={obj.labelInfo || ''}\n              helperText={obj.helperText || ''}\n            >\n              {obj.options.map((option, index) => {\n                return (\n                  <Checkbox\n                    key={index}\n                    name={option.name}\n                    large\n                    checked={values[option.name]}\n                    onChange={handleChange}\n                  >\n                    <span dangerouslySetInnerHTML={{ __html: option.label }} />\n                  </Checkbox>\n                );\n              })}\n              {errors[obj.name] && (\n                <span style={styles.errorMsg} className='error-info'>\n                  {errors[obj.name]}\n                </span>\n              )}\n            </FormGroup>\n          );\n        }\n\n        if (obj.type === 'selectlist') {\n          return (\n            <FormGroup\n              key={obj.name}\n              label={<span dangerouslySetInnerHTML={{ __html: obj.label }} />}\n              labelInfo={obj.labelInfo || ''}\n              helperText={obj.helperText || ''}\n            >\n              <HTMLSelect\n                name={obj.name}\n                options={obj.options}\n                large\n                value={values[obj.name]}\n                onChange={handleChange}\n              />\n              {errors[obj.name] && (\n                <span style={styles.errorMsg} className='error-info'>\n                  {errors[obj.name]}\n                </span>\n              )}\n            </FormGroup>\n          );\n        }\n      })}\n      <FormGroup>\n        {' '}\n        <Button\n          className='btn-submit'\n          onClick={handleSubmit}\n          disabled={disableButtons}\n        >\n          <span dangerouslySetInnerHTML={{ __html: okButtonTitle || 'SEND' }} />\n        </Button>\n        {showResetButton && (\n          <Button\n            className='btn-reset'\n            disabled={disableButtons}\n            onClick={resetHandler}\n          >\n            RESET\n          </Button>\n        )}\n      </FormGroup>\n    </form>\n  );\n}\n\nXForm.propTypes = {\n  /**\n   * Name and id of the form. Optional but recommended for style namespacing purposes when\n   * more than one form is rendered in a single page.\n   * */\n  name: PropTypes.string,\n  /**\n   * Schema of the form. Refer the example how it is defined\n   */\n  schema: PropTypes.array.isRequired,\n  /**\n   * Initial value passed to the schema. The keys will be based upon the name of the field in the\n   * schema. Refer to the example.\n   */\n  initialValues: PropTypes.object.isRequired,\n  /**\n   * Function that will compose appropriate error messages for the form.\n   */\n  validationHandler: PropTypes.func.isRequired,\n  /**\n   * Function that will execute when all data are validated. This will return a valid JSON data which\n   * can be fed to API post/get request using appropriate http methods.\n   */\n  successHandler: PropTypes.func.isRequired,\n  /**\n   * Boolean flag that will enable/disable buttons. This can be used to turn on and off while data request is\n   * being processed.\n   */\n  disableButtons: PropTypes.bool,\n  /**\n   * This sets the title of the SUBMIT button. It can be used to change text when data is being processed.\n   */\n  okButtonTitle: PropTypes.string,\n  /**\n   * This boolean flag will hide/show RESET button\n   */\n  showResetButton: PropTypes.bool\n};\n"],"names":["styles","errorMsg","color","fontSize","XForm","name","okButtonTitle","showResetButton","schema","initialValues","validationHandler","successHandler","disableButtons","useState","values","setValues","errors","setErrors","submitComplete","setSubmitComplete","handleSubmit","event","preventDefault","resetHandler","useEffect","Object","keys","length","constructor","handleChange","persist","elementType","target","type","checked","value","map","obj","__html","label","labelInfo","helperText","placeHolder","maxLength","minLength","rows","cols","options","option","index","propTypes","PropTypes","string","array","isRequired","object","func","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAcA,IAAMA,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,KADC;AAERC,IAAAA,QAAQ,EAAE;AAFF;AADG,CAAf;AAOe,SAASC,KAAT,OASZ;AAAA,MARDC,IAQC,QARDA,IAQC;AAAA,MAPDC,aAOC,QAPDA,aAOC;AAAA,MANDC,eAMC,QANDA,eAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJDC,aAIC,QAJDA,aAIC;AAAA,MAHDC,iBAGC,QAHDA,iBAGC;AAAA,MAFDC,cAEC,QAFDA,cAEC;AAAA,MADDC,cACC,QADDA,cACC;;AAAA,kBAC2BC,QAAQ,CAACJ,aAAD,CADnC;AAAA,MACMK,MADN;AAAA,MACcC,SADd;;AAAA,mBAE2BF,QAAQ,CAAC,EAAD,CAFnC;AAAA,MAEMG,MAFN;AAAA,MAEcC,SAFd;;AAAA,mBAG2CJ,QAAQ,CAAC,KAAD,CAHnD;AAAA,MAGMK,cAHN;AAAA,MAGsBC,iBAHtB;;AAKD,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAT,IAAAA,iBAAiB,IAAIO,SAAS,CAACP,iBAAiB,CAACI,MAAD,CAAlB,CAA9B;AACAK,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GALD;;AAOA,MAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBR,IAAAA,SAAS,cAAMN,aAAN,EAAT;AACD,GAFD;;AAIAe,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIN,cAAJ,EAAoB;AAClB,UAAIO,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBW,MAApB,KAA+B,CAA/B,IAAoCX,MAAM,CAACY,WAAP,KAAuBH,MAA/D,EAAuE;AACrEd,QAAAA,cAAc,CAACG,MAAD,CAAd;AACD;AACF;AACF,GANQ,EAMN,CAACE,MAAD,EAASE,cAAT,CANM,CAAT;;AAQA,MAAMW,YAAY,GAAG,SAAfA,YAAe,CAACR,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACS,OAAN;AACA,QAAMC,WAAW,GAAGV,KAAK,CAACW,MAAN,CAAaC,IAAjC;;AACA,QAAIF,WAAW,KAAK,UAApB,EAAgC;AAC9BhB,MAAAA,SAAS,CAAC,UAACD,MAAD;AAAA;;AAAA,qCACLA,MADK,kCAEPO,KAAK,CAACW,MAAN,CAAa3B,IAFN,IAEagB,KAAK,CAACW,MAAN,CAAaE,OAF1B;AAAA,OAAD,CAAT;AAID,KALD,MAKO;AACLnB,MAAAA,SAAS,CAAC,UAACD,MAAD;AAAA;;AAAA,qCACLA,MADK,kCAEPO,KAAK,CAACW,MAAN,CAAa3B,IAFN,IAEagB,KAAK,CAACW,MAAN,CAAaG,KAF1B;AAAA,OAAD,CAAT;AAID;AACF,GAdD;;AAgBA,sBACE;AAAM,IAAA,EAAE,EAAE9B,IAAV;AAAgB,IAAA,UAAU;AAA1B,KACGG,MAAM,CAAC4B,GAAP,CAAW,UAACC,GAAD,EAAS;AACnB,QACEA,GAAG,CAACJ,IAAJ,KAAa,OAAb,IACAI,GAAG,CAACJ,IAAJ,KAAa,MADb,IAEAI,GAAG,CAACJ,IAAJ,KAAa,UAFb,IAGAI,GAAG,CAACJ,IAAJ,KAAa,KAJf,EAKE;AACA,0BACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEI,GAAG,CAAChC,IADX;AAEE,QAAA,KAAK,eAAE;AAAM,UAAA,uBAAuB,EAAE;AAAEiC,YAAAA,MAAM,EAAED,GAAG,CAACE;AAAd;AAA/B,UAFT;AAGE,QAAA,QAAQ,EAAKlC,IAAL,UAAcgC,GAAG,CAAChC,IAH5B;AAIE,QAAA,SAAS,EAAEgC,GAAG,CAACG,SAAJ,IAAiB,EAJ9B;AAKE,QAAA,UAAU,EAAEH,GAAG,CAACI,UAAJ,IAAkB;AALhC,sBAOE,oBAAC,UAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,EAAE,EAAKpC,IAAL,UAAcgC,GAAG,CAAChC,IAFtB;AAGE,QAAA,IAAI,EAAEgC,GAAG,CAAChC,IAHZ;AAIE,QAAA,WAAW,EAAEgC,GAAG,CAACK,WAAJ,IAAmB,EAJlC;AAKE,QAAA,SAAS,EAAEL,GAAG,CAACM,SAAJ,IAAiBN,GAAG,CAACM,SALlC;AAME,QAAA,SAAS,EAAEN,GAAG,CAACO,SAAJ,IAAiBP,GAAG,CAACO,SANlC;AAOE,QAAA,IAAI,EAAEP,GAAG,CAACJ,IAPZ;AAQE,QAAA,QAAQ,EAAEJ,YARZ;AASE,QAAA,KAAK,EAAEf,MAAM,CAACuB,GAAG,CAAChC,IAAL;AATf,QAPF,EAkBGW,MAAM,CAACqB,GAAG,CAAChC,IAAL,CAAN,iBACC;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACC,QAApB;AAA8B,QAAA,SAAS,EAAC;AAAxC,SACGe,MAAM,CAACqB,GAAG,CAAChC,IAAL,CADT,CAnBJ,CADF;AA0BD;;AAED,QAAIgC,GAAG,CAACJ,IAAJ,KAAa,UAAjB,EAA6B;AAC3B,0BACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEI,GAAG,CAAChC,IADX;AAEE,QAAA,KAAK,eAAE;AAAM,UAAA,uBAAuB,EAAE;AAAEiC,YAAAA,MAAM,EAAED,GAAG,CAACE;AAAd;AAA/B,UAFT;AAGE,QAAA,QAAQ,EAAKlC,IAAL,UAAcgC,GAAG,CAAChC,IAH5B;AAIE,QAAA,SAAS,EAAEgC,GAAG,CAACG,SAAJ,IAAiB,EAJ9B;AAKE,QAAA,UAAU,EAAEH,GAAG,CAACI,UAAJ,IAAkB;AALhC,sBAOE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAKpC,IAAL,UAAcgC,GAAG,CAAChC,IADtB;AAEE,QAAA,IAAI,EAAEgC,GAAG,CAAChC,IAFZ;AAGE,QAAA,IAAI,EAAES,MAAM,CAACuB,GAAG,CAAChC,IAAL,CAHd;AAIE,QAAA,WAAW,EAAEgC,GAAG,CAACK,WAAJ,IAAmB,EAJlC;AAKE,QAAA,IAAI,EAAEL,GAAG,CAACQ,IAAJ,IAAYR,GAAG,CAACQ,IALxB;AAME,QAAA,IAAI,EAAER,GAAG,CAACS,IAAJ,IAAYT,GAAG,CAACS,IANxB;AAOE,QAAA,cAAc,MAPhB;AAQE,QAAA,KAAK,MARP;AASE,QAAA,QAAQ,EAAEjB;AATZ,QAPF,EAkBGb,MAAM,CAACqB,GAAG,CAAChC,IAAL,CAAN,iBACC;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACC,QAApB;AAA8B,QAAA,SAAS,EAAC;AAAxC,SACGe,MAAM,CAACqB,GAAG,CAAChC,IAAL,CADT,CAnBJ,CADF;AA0BD;;AAED,QAAIgC,GAAG,CAACJ,IAAJ,KAAa,YAAjB,EAA+B;AAC7B,0BACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEI,GAAG,CAAChC,IADX;AAEE,QAAA,KAAK,eAAE;AAAM,UAAA,uBAAuB,EAAE;AAAEiC,YAAAA,MAAM,EAAED,GAAG,CAACE;AAAd;AAA/B,UAFT;AAGE,QAAA,SAAS,EAAEF,GAAG,CAACG,SAAJ,IAAiB,EAH9B;AAIE,QAAA,UAAU,EAAEH,GAAG,CAACI,UAAJ,IAAkB;AAJhC,sBAME,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAEZ,YADZ;AAEE,QAAA,IAAI,EAAEQ,GAAG,CAAChC,IAFZ;AAGE,QAAA,aAAa,EAAES,MAAM,CAACuB,GAAG,CAAChC,IAAL;AAHvB,SAKGgC,GAAG,CAACU,OAAJ,CAAYX,GAAZ,CAAgB,UAACY,MAAD,EAASC,KAAT,EAAmB;AAClC,4BACE,oBAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,GAAG,EAAEA,KAFP;AAGE,UAAA,SAAS,EAAK5C,IAAL,gBAAoBgC,GAAG,CAAChC,IAHnC;AAIE,UAAA,KAAK,EAAE2C,MAAM,CAACb;AAJhB,wBAME;AACE,UAAA,uBAAuB,EAAE;AAAEG,YAAAA,MAAM,EAAEU,MAAM,CAACT;AAAjB;AAD3B,UANF,CADF;AAYD,OAbA,CALH,CANF,EA0BGvB,MAAM,CAACqB,GAAG,CAAChC,IAAL,CAAN,iBACC;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACC,QAApB;AAA8B,QAAA,SAAS,EAAC;AAAxC,SACGe,MAAM,CAACqB,GAAG,CAAChC,IAAL,CADT,CA3BJ,CADF;AAkCD;;AAED,QAAIgC,GAAG,CAACJ,IAAJ,KAAa,eAAjB,EAAkC;AAChC,0BACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEI,GAAG,CAAChC,IADX;AAEE,QAAA,KAAK,eAAE;AAAM,UAAA,uBAAuB,EAAE;AAAEiC,YAAAA,MAAM,EAAED,GAAG,CAACE;AAAd;AAA/B,UAFT;AAGE,QAAA,SAAS,EAAEF,GAAG,CAACG,SAAJ,IAAiB,EAH9B;AAIE,QAAA,UAAU,EAAEH,GAAG,CAACI,UAAJ,IAAkB;AAJhC,SAMGJ,GAAG,CAACU,OAAJ,CAAYX,GAAZ,CAAgB,UAACY,MAAD,EAASC,KAAT,EAAmB;AAClC,4BACE,oBAAC,QAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,IAAI,EAAED,MAAM,CAAC3C,IAFf;AAGE,UAAA,KAAK,MAHP;AAIE,UAAA,OAAO,EAAES,MAAM,CAACkC,MAAM,CAAC3C,IAAR,CAJjB;AAKE,UAAA,QAAQ,EAAEwB;AALZ,wBAOE;AAAM,UAAA,uBAAuB,EAAE;AAAES,YAAAA,MAAM,EAAEU,MAAM,CAACT;AAAjB;AAA/B,UAPF,CADF;AAWD,OAZA,CANH,EAmBGvB,MAAM,CAACqB,GAAG,CAAChC,IAAL,CAAN,iBACC;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACC,QAApB;AAA8B,QAAA,SAAS,EAAC;AAAxC,SACGe,MAAM,CAACqB,GAAG,CAAChC,IAAL,CADT,CApBJ,CADF;AA2BD;;AAED,QAAIgC,GAAG,CAACJ,IAAJ,KAAa,YAAjB,EAA+B;AAC7B,0BACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEI,GAAG,CAAChC,IADX;AAEE,QAAA,KAAK,eAAE;AAAM,UAAA,uBAAuB,EAAE;AAAEiC,YAAAA,MAAM,EAAED,GAAG,CAACE;AAAd;AAA/B,UAFT;AAGE,QAAA,SAAS,EAAEF,GAAG,CAACG,SAAJ,IAAiB,EAH9B;AAIE,QAAA,UAAU,EAAEH,GAAG,CAACI,UAAJ,IAAkB;AAJhC,sBAME,oBAAC,UAAD;AACE,QAAA,IAAI,EAAEJ,GAAG,CAAChC,IADZ;AAEE,QAAA,OAAO,EAAEgC,GAAG,CAACU,OAFf;AAGE,QAAA,KAAK,MAHP;AAIE,QAAA,KAAK,EAAEjC,MAAM,CAACuB,GAAG,CAAChC,IAAL,CAJf;AAKE,QAAA,QAAQ,EAAEwB;AALZ,QANF,EAaGb,MAAM,CAACqB,GAAG,CAAChC,IAAL,CAAN,iBACC;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACC,QAApB;AAA8B,QAAA,SAAS,EAAC;AAAxC,SACGe,MAAM,CAACqB,GAAG,CAAChC,IAAL,CADT,CAdJ,CADF;AAqBD;AACF,GA1JA,CADH,eA4JE,oBAAC,SAAD,QACG,GADH,eAEE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,OAAO,EAAEe,YAFX;AAGE,IAAA,QAAQ,EAAER;AAHZ,kBAKE;AAAM,IAAA,uBAAuB,EAAE;AAAE0B,MAAAA,MAAM,EAAEhC,aAAa,IAAI;AAA3B;AAA/B,IALF,CAFF,EASGC,eAAe,iBACd,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,QAAQ,EAAEK,cAFZ;AAGE,IAAA,OAAO,EAAEW;AAHX,aAVJ,CA5JF,CADF;AAkLD;AAEDnB,KAAK,CAAC8C,SAAN,GAAkB;AAKhB7C,EAAAA,IAAI,EAAE8C,SAAS,CAACC,MALA;AAShB5C,EAAAA,MAAM,EAAE2C,SAAS,CAACE,KAAV,CAAgBC,UATR;AAchB7C,EAAAA,aAAa,EAAE0C,SAAS,CAACI,MAAV,CAAiBD,UAdhB;AAkBhB5C,EAAAA,iBAAiB,EAAEyC,SAAS,CAACK,IAAV,CAAeF,UAlBlB;AAuBhB3C,EAAAA,cAAc,EAAEwC,SAAS,CAACK,IAAV,CAAeF,UAvBf;AA4BhB1C,EAAAA,cAAc,EAAEuC,SAAS,CAACM,IA5BV;AAgChBnD,EAAAA,aAAa,EAAE6C,SAAS,CAACC,MAhCT;AAoChB7C,EAAAA,eAAe,EAAE4C,SAAS,CAACM;AApCX,CAAlB;;;;"}